--The club is adding a new facility - a spa. We need to add it into the facilities table. 
--Use the following values: 
--facid: 9, Name: 'Spa', membercost: 20, guestcost: 30, initialoutlay: 100000, monthlymaintenance: 800.

insert into cd.facilities
values (9, 'Spa', 20, 30, 100000, 800);



--In the previous exercise, you learned how to add a facility. 
--Now you're going to add multiple facilities in one command. Use the following values:
--facid: 9, Name: 'Spa', membercost: 20, guestcost: 30, initialoutlay: 100000, monthlymaintenance: 800.
--facid: 10, Name: 'Squash Court 2', membercost: 3.5, guestcost: 17.5, initialoutlay: 5000, monthlymaintenance: 80.

insert into cd.facilities 
values (9, 'Spa', 20, 30, 100000, 800),
		(10, 'Squash Court 2', 3.5, 17.5, 5000, 80);
		
		
		
--Let's try adding the spa to the facilities table again. This time we want to automatically 
--generate the value for the next facid, rather than specifying it as a constant. 
--Use the following values for everything else:
--Name: 'Spa', membercost: 20, guestcost: 30, initialoutlay: 100000, monthlymaintenance: 800.

1.
insert into cd.facilities 
	(facid, name, membercost, guestcost, initialoutlay, monthlymaintenance)
values
	((select facid from cd.facilities order by facid desc limit 1)+1,'Spa', 20, 30, 100000, 800);
2.
insert into cd.facilities
    (facid, name, membercost, guestcost, initialoutlay, monthlymaintenance)
    select (select max(facid) from cd.facilities)+1, 'Spa', 20, 30, 100000, 800;



--We made a mistake when entering the data for the second tennis court. 
--The initial outlay was 10000 rather than 8000: 
--you need to alter the data to fix the error.

update cd.facilities
set initialoutlay=10000
where name='Tennis Court 2';



--We want to alter the price of the second tennis court so that it costs 10% more than the first one. 
--Try to do this without using constant values for the prices, 
--so that we can reuse the statement if we want to

update cd.facilities
set membercost=(select membercost * 0.1 + membercost
				from cd.facilities
			   where name='Tennis Court 1'),
	guestcost=(select guestcost * 0.1 + guestcost
				from cd.facilities
			   where name='Tennis Court 1')
where name='Tennis Court 2'



--As part of a clearout of our database, we want to delete all bookings from the cd.bookings table. 
--How can we accomplish this?

delete from cd.bookings;



--In our previous exercises, we deleted a specific member who had never made a booking. 
--How can we make that more general, to delete all members who have never made a booking?

delete from cd.members
where memid not in (select b.memid from cd.bookings as b);






	
		