--How can you produce a list of the start times for bookings 
--by members named 'David Farrell'?

SELECT starttime
	FROM 
		cd.bookings as b
		JOIN cd.members as m
			ON b.memid=m.memid
	WHERE 
		surname='Farrell' 
		AND firstname='David';


		
--How can you produce a list of the start times for bookings for tennis courts, 
--for the date '2012-09-21'? Return a list of start time and 
--facility name pairings, ordered by the time.

SELECT b.starttime, f.name
	FROM cd.bookings AS b
	JOIN cd.facilities AS f
	ON b.facid=f.facid
WHERE b.starttime BETWEEN '2012-09-21 00:00:00' AND '2012-09-21 23:59:59'
AND f.name LIKE ('Tennis Court%')
ORDER BY b.starttime;



--How can you output a list of all members who have recommended another member? 
--Ensure that there are no duplicates in the list, 
--and that results are ordered by (surname, firstname).

1.
SELECT ms.firstname, ms.surname
FROM cd.members AS ms
WHERE ms.memid IN (SELECT m.recommendedby
					FROM cd.members AS m)
ORDER BY ms.surname, ms.firstname;
2.
SELECT ms.firstname, ms.surname
FROM cd.members AS ms
WHERE EXISTS (SELECT m.recommendedby
				FROM cd.members AS m
				WHERE ms.memid=m.recommendedby)
ORDER BY ms.surname, ms.firstname;
3.
SELECT DISTINCT ms.firstname, ms.surname
FROM cd.members AS m
JOIN cd.members AS ms
ON ms.memid=m.recommendedby
ORDER BY ms.surname, ms.firstname;



--How can you output a list of all members, including the individual 
--who recommended them (if any)? 
--Ensure that results are ordered by (surname, firstname).

SELECT m.firstname as memfname, m.surname as memsname, mr.firstname as recfname, mr.surname as recsname
FROM cd.members m 
left JOIN cd.members mr ON mr.memid=m.recommendedby
order by memsname, memfname;



--How can you produce a list of all members who have used a tennis court? 
--Include in your output the name of the court, and the name of the member formatted as a single column. 
--Ensure no duplicate data, and order by the member name followed by the facility name.

select distinct m.firstname || ' ' || m.surname as member, f.name as facility
from cd.bookings as b
join cd.members as m on m.memid=b.memid
join cd.facilities as f on f.facid=b.facid
where f.name like ('Tennis%')
order by 1, 2;



--How can you produce a list of bookings on the day of 2012-09-14 
--which will cost the member (or guest) more than $30? 
--Remember that guests have different costs to members (the listed costs are per half-hour 'slot'),
-- and the guest user is always ID 0. Include in your output the name of the facility, 
--the name of the member formatted as a single column, and the cost. 
--Order by descending cost, and do not use any subqueries.

select m.firstname || ' ' || m.surname as member, f.name as facility, 
case when m.memid=0 then b.slots*f.guestcost
else b.slots*f.membercost
end as cost
from cd.bookings as b
join cd.members as m on m.memid=b.memid
join cd.facilities as f on f.facid=b.facid
WHERE b.starttime>='2012-09-14' and b.starttime<'2012-09-15'
AND ((m.memid=0 and b.slots*f.guestcost > 30) OR (m.memid!=0 and b.slots*f.membercost > 30))
order by cost desc;



--How can you output a list of all members, including the individual who recommended them (if any), without using any joins? Ensure that there are no duplicates in the list, and that each firstname + surname pairing is formatted as a column and ordered.

select distinct ms.firstname || ' ' || ms.surname as member,
	(select m.firstname || ' ' || m.surname as recommender 
 	from cd.members m
 	where m.memid=ms.recommendedby)
from cd.members ms
order by 1;



--How can you output a list of all members, including the individual who recommended them (if any), 
--without using any joins? Ensure that there are no duplicates in the list, 
--and that each firstname + surname pairing is formatted as a column and ordered.

select distinct ms.firstname || ' ' || ms.surname as member,
	(select m.firstname || ' ' || m.surname as recommender 
 	from cd.members m
 	where m.memid=ms.recommendedby)
from cd.members ms
order by 1;



--The Produce a list of costly bookings exercise contained some messy logic: 
--we had to calculate the booking cost in both the WHERE clause and the CASE statement. 
--Try to simplify this calculation using subqueries.

select member, facility, cost
from (select m.firstname || ' ' || m.surname as member, f.name as facility, 
    case when m.memid=0 then b.slots*f.guestcost
    else b.slots*f.membercost
    end as cost
 
    from cd.bookings as b
    join cd.members as m on m.memid=b.memid
    join cd.facilities as f on f.facid=b.facid
 
    where b.starttime>='2012-09-14' and b.starttime<'2012-09-15') as sub
    where cost > 30
order by cost desc;





